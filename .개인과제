// Player 클래스
class Player {
  constructor(name, hp, attack) {
    this.name = name;
    this.hp = hp;
    this.attack = attack;
  }

  attack(monster) {
    console.log(`${this.name}이(가) ${monster.name}을(를) 공격했습니다.`);
    monster.hp -= this.attack;
    console.log(`${monster.name}의 체력이 ${monster.hp}가 되었습니다.`);
  }

  flee() {
    console.log(`${this.name}이(가) 도망쳤습니다.`);
    return true; // 도망치기 성공
  }
}

// Monster 클래스
class Monster {
  constructor(name, hp, attack) {
    this.name = name;
    this.hp = hp;
    this.attack = attack;
  }

  attack(player) {
    console.log(`${this.name}이(가) ${player.name}을(를) 공격했습니다.`);
    player.hp -= this.attack;
    console.log(`${player.name}의 체력이 ${player.hp}가 되었습니다.`);
  }
}

// 게임 시작
function startGame() {
  const player = new Player('플레이어', 100, 20);
  let stage = 1;
  let monsterHp = 100;
  let monsterAttack = 10;

  while (true) {
    let monster = new Monster(`몬스터 ${stage}`, monsterHp, monsterAttack);

    console.log(`현재 스테이지: ${stage}`);
    console.log(`플레이어 체력: ${player.hp}`);
    console.log(`몬스터 체력: ${monster.hp}`);

    // 플레이어 행동 선택
    const action = prompt('행동을 선택하세요: 1. 공격, 2. 도망치기');
    switch (action) {
      case '1':
        player.attack(monster);
        break;
      case '2':
        if (player.flee()) {
          stage++; // 도망칠 경우 다음 스테이지로 이동
          monsterHp = 100 * Math.pow(1.5, stage - 1);
          monsterAttack = 10 + stage;
        }
        break;
      default:
        console.log('잘못된 입력입니다.');
        continue;
    }

    // 몬스터 공격
    monster.attack(player);

    // 몬스터 체력 확인
    if (monster.hp <= 0) {
      console.log(`${monster.name}을(를) 물리쳤습니다.`);
      player.hp = 100; // 스테이지 클리어 시 플레이어 체력 회복
      stage++;
      monsterHp = 100 * Math.pow(1.5, stage - 1);
      monsterAttack = 10 + stage;
    }

    // 플레이어 체력 확인
    if (player.hp <= 0) {
      console.log(`${player.name}이(가) 패배했습니다.`);
      return; // 게임 종료
    }
  }
}

startGame();